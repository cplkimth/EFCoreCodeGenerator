// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace ChinookFW.Data
{
    [Table("Track")]
    public partial class Track
    {
        public Track()
        {
            PlaylistTracks = new HashSet<PlaylistTrack>();
        }

        [Key]
        public int TrackId { get; set; }
        [Required]
        [StringLength(200)]
        public string Name { get; set; }
        public int? AlbumId { get; set; }
        public bool BitCol { get; set; }
        public bool? BitColNull { get; set; }
        public byte TinyIntCol { get; set; }
        public byte? TinyIntColNull { get; set; }
        public short SmallIntCol { get; set; }
        public short? SmallIntColNull { get; set; }
        public long BigIntCol { get; set; }
        public long? BigIntColNull { get; set; }
        [Required]
        [StringLength(10)]
        public string CharCol { get; set; }
        [StringLength(10)]
        public string CharColNull { get; set; }
        [Required]
        [StringLength(50)]
        public string VarCharCol { get; set; }
        [StringLength(50)]
        public string VarCharColNull { get; set; }
        [Required]
        [StringLength(10)]
        public string NcharCol { get; set; }
        [StringLength(10)]
        public string NcharColNull { get; set; }
        [Required]
        [StringLength(50)]
        public string NvarCharCol { get; set; }
        [Required]
        [StringLength(50)]
        public string NvarCharColNull { get; set; }
        [Required]
        [MaxLength(50)]
        public byte[] BinaryCol { get; set; }
        [MaxLength(50)]
        public byte[] BinaryColNull { get; set; }
        [Column(TypeName = "date")]
        public DateTime DateCol { get; set; }
        [Column(TypeName = "date")]
        public DateTime? DateColNull { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime DateTimeCol { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? DateTimeColNull { get; set; }
        [Column(TypeName = "smalldatetime")]
        public DateTime SmallDateTimeCol { get; set; }
        [Column(TypeName = "smalldatetime")]
        public DateTime? SmallDateTimeColNull { get; set; }
        [Column(TypeName = "decimal(18, 2)")]
        public decimal DecimalCol { get; set; }
        [Column(TypeName = "decimal(18, 2)")]
        public decimal? DecimalColNull { get; set; }
        public double FloatCol { get; set; }
        public double? FloatColNull { get; set; }
        public float RealCol { get; set; }
        public float? RealColNull { get; set; }
        [Column(TypeName = "smallmoney")]
        public decimal SmallMoneyCol { get; set; }
        [Column(TypeName = "smallmoney")]
        public decimal? SmallMoneyColNull { get; set; }
        [Required]
        public byte[] TimeStampCol { get; set; }
        public TimeSpan TimeCol { get; set; }
        public TimeSpan? TimeColNull { get; set; }
        public Guid GuidCol { get; set; }
        public Guid? GuidColNull { get; set; }
        [Required]
        [MaxLength(50)]
        public byte[] VarBinaryCol { get; set; }
        [MaxLength(50)]
        public byte[] VarBinaryColNull { get; set; }

        [ForeignKey(nameof(AlbumId))]
        [InverseProperty("Tracks")]
        public virtual Album Album { get; set; }
        [InverseProperty(nameof(PlaylistTrack.Track))]
        public virtual ICollection<PlaylistTrack> PlaylistTracks { get; set; }
    }
}