// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace Hope.Data
{
    public partial class User
    {
        public User()
        {
            AssignmentReservations = new HashSet<AssignmentReservation>();
            Assignments = new HashSet<Assignment>();
            Attendances = new HashSet<Attendance>();
            Audits = new HashSet<Audit>();
            CallHistories = new HashSet<CallHistory>();
            Centers = new HashSet<Center>();
            ChatChatByNavigations = new HashSet<Chat>();
            ChatChatToNavigations = new HashSet<Chat>();
            Consults = new HashSet<Consult>();
            CustomerFiles = new HashSet<CustomerFile>();
            CustomerHiddennesses = new HashSet<CustomerHiddenness>();
            CustomerMemos = new HashSet<CustomerMemo>();
            CustomerModifiedByNavigations = new HashSet<Customer>();
            CustomerOwners = new HashSet<Customer>();
            CustomerPassPassedFromNavigations = new HashSet<CustomerPass>();
            CustomerPassPassedToNavigations = new HashSet<CustomerPass>();
            CustomerPermissionRegisteredByNavigations = new HashSet<CustomerPermission>();
            CustomerPermissionUsers = new HashSet<CustomerPermission>();
            CustomerTags = new HashSet<CustomerTag>();
            Departments = new HashSet<Department>();
            DocumentVersions = new HashSet<DocumentVersion>();
            Documents = new HashSet<Document>();
            Favorates = new HashSet<Favorate>();
            GenericLogs = new HashSet<GenericLog>();
            Memos = new HashSet<Memo>();
            OnlineRequests = new HashSet<OnlineRequest>();
            ProductProgresses = new HashSet<ProductProgress>();
            PushCallRecordings = new HashSet<PushCallRecording>();
            Supports = new HashSet<Support>();
            Timers = new HashSet<Timer>();
            UsbKeyLogs = new HashSet<UsbKeyLog>();
            UserRoles = new HashSet<UserRole>();
            Works = new HashSet<Work>();
        }

        public int UserId { get; set; }
        public string LoginId { get; set; }
        public string Password { get; set; }
        public string Name { get; set; }
        public DateTime? Birthday { get; set; }
        public DateTime? DayIn { get; set; }
        public DateTime? DayOut { get; set; }
        public string Handphone { get; set; }
        public string Email { get; set; }
        /// <summary>
        /// 발생 연차
        /// </summary>
        public decimal GivenRestDay { get; set; }
        public int PermissionLevel { get; set; }
        public int DepartmentId { get; set; }
        /// <summary>
        /// [36] 사용자 유형
        /// </summary>
        public int GradeCode { get; set; }
        public bool Enabled { get; set; }
        public string Memo { get; set; }
        public DateTime? LastLoggedAt { get; set; }
        public string Sip { get; set; }
        public string SyncKey { get; set; }
        public string FcmToken { get; set; }
        public string BusinessHandphone { get; set; }
        /// <summary>
        /// 잔여 연차
        /// </summary>
        public decimal LeftRestDay { get; set; }
        /// <summary>
        /// 사용한 연차 수 (2021년에만 사용)
        /// </summary>
        public decimal TakenRestDay { get; set; }
        public string AlarmTalkDivisionId { get; set; }
        /// <summary>
        /// [69] 업무폰 통신사
        /// </summary>
        public int BusinessPhoneCompanyCode { get; set; }
        public int CenterId { get; set; }
        public string KakaoSyncKey { get; set; }
        public bool IsSenior { get; set; }
        /// <summary>
        /// 마지막으로 주니어 상담사로부터 이관 받은 일시
        /// </summary>
        public DateTime LastPassedAt { get; set; }
        /// <summary>
        /// 최대로 이관받을 수 상담수
        /// </summary>
        public int DailyPassQuota { get; set; }
        /// <summary>
        /// 최대로 배정받을 수 고객수
        /// </summary>
        public int DailyAssignmentQuota { get; set; }
        /// <summary>
        /// B 등급 고객만 배정받음
        /// </summary>
        public bool LessGradeOnly { get; set; }

        public virtual Center Center { get; set; }
        public virtual Department Department { get; set; }
        public virtual UserEx UserEx { get; set; }
        public virtual ICollection<AssignmentReservation> AssignmentReservations { get; set; }
        public virtual ICollection<Assignment> Assignments { get; set; }
        public virtual ICollection<Attendance> Attendances { get; set; }
        public virtual ICollection<Audit> Audits { get; set; }
        public virtual ICollection<CallHistory> CallHistories { get; set; }
        public virtual ICollection<Center> Centers { get; set; }
        public virtual ICollection<Chat> ChatChatByNavigations { get; set; }
        public virtual ICollection<Chat> ChatChatToNavigations { get; set; }
        public virtual ICollection<Consult> Consults { get; set; }
        public virtual ICollection<CustomerFile> CustomerFiles { get; set; }
        public virtual ICollection<CustomerHiddenness> CustomerHiddennesses { get; set; }
        public virtual ICollection<CustomerMemo> CustomerMemos { get; set; }
        public virtual ICollection<Customer> CustomerModifiedByNavigations { get; set; }
        public virtual ICollection<Customer> CustomerOwners { get; set; }
        public virtual ICollection<CustomerPass> CustomerPassPassedFromNavigations { get; set; }
        public virtual ICollection<CustomerPass> CustomerPassPassedToNavigations { get; set; }
        public virtual ICollection<CustomerPermission> CustomerPermissionRegisteredByNavigations { get; set; }
        public virtual ICollection<CustomerPermission> CustomerPermissionUsers { get; set; }
        public virtual ICollection<CustomerTag> CustomerTags { get; set; }
        public virtual ICollection<Department> Departments { get; set; }
        public virtual ICollection<DocumentVersion> DocumentVersions { get; set; }
        public virtual ICollection<Document> Documents { get; set; }
        public virtual ICollection<Favorate> Favorates { get; set; }
        public virtual ICollection<GenericLog> GenericLogs { get; set; }
        public virtual ICollection<Memo> Memos { get; set; }
        public virtual ICollection<OnlineRequest> OnlineRequests { get; set; }
        public virtual ICollection<ProductProgress> ProductProgresses { get; set; }
        public virtual ICollection<PushCallRecording> PushCallRecordings { get; set; }
        public virtual ICollection<Support> Supports { get; set; }
        public virtual ICollection<Timer> Timers { get; set; }
        public virtual ICollection<UsbKeyLog> UsbKeyLogs { get; set; }
        public virtual ICollection<UserRole> UserRoles { get; set; }
        public virtual ICollection<Work> Works { get; set; }
    }
}