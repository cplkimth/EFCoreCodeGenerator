{
	"Version":2,
	"Scope":0,
	"TargetPath":"`DataProjectDirectory`/DbContextFactory.cs",
	"Overwritable": false
}
*** body starts here ***
#region
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
#endregion

namespace `DataProjectNamespace`;

public class DbContextFactory
{
    public static string ConnectionString => ""; // TODO : Type ConnectionString here

    private static PooledDbContextFactory<`DbContextName`>? _factory;

    public static `DbContextName` Create()
    {
        if (_factory == null)
            InitializeFactory();

        return _factory!.CreateDbContext();
    }

    private static void InitializeFactory()
    {
        var optionsBuilder = new DbContextOptionsBuilder<`DbContextName`>();

        // 콘솔에 로그 출력
#if DEBUG
        optionsBuilder.UseLoggerFactory(`DbContextName`LoggerFactory.GetInstance(
            nameof(LogPath.Console),
            nameof(LogPath.Debug),
            @"`DbContextName`.log"));
#endif

        // 엔터티 상태를 트랙킹하지 않음
        optionsBuilder.UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);

        // QuerySplittingBehavior
        var querySplittingBehavior = QuerySplittingBehavior.SplitQuery;

        var options = optionsBuilder
            .UseSqlServer(
                ConnectionString,
                x => x.UseQuerySplittingBehavior(querySplittingBehavior))
            .Options;

        _factory = new PooledDbContextFactory<`DbContextName`>(options);
    }
}